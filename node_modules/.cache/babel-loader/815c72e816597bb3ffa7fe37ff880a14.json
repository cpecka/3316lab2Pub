{"ast":null,"code":"var _jsxFileName = \"/Users/colinpecka/Documents/GitHub/lab2-cpecka/se3316-lab2/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reactDom from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square({\n  value,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Square;\n\nfunction ConnectFourBoard() {\n  _s();\n\n  const [squares, setSquare] = useState(Array(42).fill(null));\n  const [isYellowTurn, setYellowTurn] = useState(true);\n  const winner = calculateWinner(squares);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [renderSquare(0), renderSquare(1), renderSquare(2), renderSquare(3), renderSquare(4), renderSquare(5), renderSquare(6)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [renderSquare(7), renderSquare(8), renderSquare(9), renderSquare(10), renderSquare(11), renderSquare(12), renderSquare(13)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [renderSquare(14), renderSquare(15), renderSquare(16), renderSquare(17), renderSquare(18), renderSquare(19), renderSquare(20)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [renderSquare(21), renderSquare(22), renderSquare(23), renderSquare(24), renderSquare(25), renderSquare(26), renderSquare(27)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [renderSquare(28), renderSquare(29), renderSquare(30), renderSquare(31), renderSquare(32), renderSquare(33), renderSquare(34)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [renderSquare(35), renderSquare(36), renderSquare(37), renderSquare(38), renderSquare(39), renderSquare(40), renderSquare(41)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: getWinner()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n\n  function renderSquare(input) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: squares[input],\n      onClick: () => {\n        const tempSquares = squares.slice();\n\n        if (tempSquares[input] === null && winner === null) {\n          tempSquares[input] = isYellowTurn ? \"X\" : \"O\";\n          setSquare(tempSquares);\n          setYellowTurn(!isYellowTurn);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this);\n  }\n\n  function getWinner() {\n    if (winner) {\n      return winner + \"Won!\";\n    }\n  }\n}\n\n_s(ConnectFourBoard, \"ulC+UZ2J0PCIMmi0p7L665gPcuI=\");\n\n_c2 = ConnectFourBoard;\nReactDOM.render( /*#__PURE__*/_jsxDEV(ConnectFourBoard, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 105,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const winningSets = [[0, 1, 2, 3], [1, 2, 3, 4], [2, 3, 4, 5], [3, 4, 5, 6]];\n\n  for (let i = 0; i < winningSets.length; i++) {\n    const [a, b, c, d] = winningSets[i];\n\n    if (squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n} // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n\nreportWebVitals();\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"ConnectFourBoard\");","map":{"version":3,"sources":["/Users/colinpecka/Documents/GitHub/lab2-cpecka/se3316-lab2/src/index.js"],"names":["React","useEffect","useState","ReactDOM","App","reportWebVitals","reactDom","Square","value","onClick","ConnectFourBoard","squares","setSquare","Array","fill","isYellowTurn","setYellowTurn","winner","calculateWinner","renderSquare","getWinner","input","tempSquares","slice","render","document","getElementById","winningSets","i","length","a","b","c","d"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reactDom from 'react-dom';\n\nfunction Square({value, onClick}){\n  return (\n      <button className =\"square\" onClick={onClick} >\n        {value}\n      </button>\n      \n  )\n  }\nfunction ConnectFourBoard ()\n  {\n    const[squares, setSquare] = useState(Array(42).fill(null));\n    const [isYellowTurn, setYellowTurn] = useState(true);\n    const winner = calculateWinner(squares);\n\n    return(\n      <div>\n        <div>\n        {renderSquare(0)}\n        {renderSquare(1)}        \n        {renderSquare(2)}\n        {renderSquare(3)}        \n        {renderSquare(4)}        \n        {renderSquare(5)}        \n        {renderSquare(6)}\n      </div>\n      <div>\n        {renderSquare(7)}\n        {renderSquare(8)}        \n        {renderSquare(9)}\n        {renderSquare(10)}        \n        {renderSquare(11)}        \n        {renderSquare(12)}        \n        {renderSquare(13)}\n      </div>\n      <div>\n        {renderSquare(14)}\n        {renderSquare(15)}        \n        {renderSquare(16)}\n        {renderSquare(17)}        \n        {renderSquare(18)}        \n        {renderSquare(19)}        \n        {renderSquare(20)}\n      </div>\n      <div>\n        {renderSquare(21)}\n        {renderSquare(22)}        \n        {renderSquare(23)}\n        {renderSquare(24)}        \n        {renderSquare(25)}        \n        {renderSquare(26)}        \n        {renderSquare(27)}\n      </div>\n      <div>\n        {renderSquare(28)}\n        {renderSquare(29)}        \n        {renderSquare(30)}\n        {renderSquare(31)}        \n        {renderSquare(32)}        \n        {renderSquare(33)}        \n        {renderSquare(34)}\n      </div>\n      <div>\n        {renderSquare(35)}\n        {renderSquare(36)}        \n        {renderSquare(37)}\n        {renderSquare(38)}        \n        {renderSquare(39)}        \n        {renderSquare(40)}        \n        {renderSquare(41)}\n      </div>\n    <div>{getWinner()}</div>\n      </div>\n    )\n    function renderSquare(input) {\n      return(\n        <Square value = {squares[input]} onClick={() =>{\n          const tempSquares = squares.slice();\n          if(tempSquares[input]===null && winner === null){\n            tempSquares[input]= isYellowTurn? \"X\" : \"O\";\n          setSquare(tempSquares);\n          setYellowTurn(!isYellowTurn);\n          }\n        }}/>\n      )\n  }\n\n  function getWinner(){\n    if(winner) {\n      return winner + \"Won!\"\n    }\n  }\n\n  }\n\n  \n\nReactDOM.render(\n  <ConnectFourBoard/>,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const winningSets = [\n    [0,1,2,3],[1,2,3,4],[2,3,4,5],[3,4,5,6]\n  ];\n\n  for (let i = 0; i < winningSets.length; i++){\n    const [a, b, c, d] = winningSets[i];\n    if(squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d]){\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}